:root {
  --bg-crystal: radial-gradient(1200px 800px at 10% -10%, #1e2636 0%, #0b0f18 45%, #06080e 100%);
  --glass-bg: rgba(255,255,255,0.08);
  --glass-stroke: rgba(255,255,255,0.18);
  --glass-hover: rgba(255,255,255,0.12);
  --glass-strong: rgba(255,255,255,0.16);
  --blur: 14px;

  --accent: #7dd3fc;
  --accent-2: #38bdf8;
  --accent-glow: 0 0 18px rgba(125,211,252,.45);

  --text-strong: #edf2f7;
  --text-soft: #bac7d3;

  --stroke: 1px solid var(--glass-stroke);
  --shadow-1: 0 10px 30px rgba(0,0,0,.35);
  --shadow-2: 0 30px 60px rgba(0,0,0,.35);
}


button, .nowbar a, .nowbar button, .fileLabel {
  background: linear-gradient(180deg, var(--glass-strong), rgba(255,255,255,0.04)) !important;
  border: var(--stroke) !important;
  color: var(--text-strong) !important;
  backdrop-filter: blur(calc(var(--blur) - 4px)) !important;
  -webkit-backdrop-filter: blur(calc(var(--blur) - 4px)) !important;
  box-shadow: var(--shadow-1);
}
button:hover, .nowbar a:hover, .nowbar button:hover, .fileLabel:hover {
  border-color: var(--accent-2) !important;
  box-shadow: var(--accent-glow), var(--shadow-1);
}

:root {
  --bg: #0b0b0b;
  --bg-alt: #111;
  --text: #eee;
  --border: #222;
  --accent: #3b82f6;
}
body.light {
  --bg: #fafafa;
  --bg-alt: #fff;
  --text: #111;
  --border: #ccc;
  --accent: #2563eb;
}
* { box-sizing: border-box; font-family: 'Inter', system-ui, sans-serif; }
body {
  background: var(--bg);
  color: var(--text);
  display: flex;
  flex-direction: column;
  height: 100vh;
}
.fileLabel {
  display: inline-flex; align-items: center; gap: 6px;
  background: var(--bg); color: var(--text);
  border: 1px solid var(--border); border-radius: 8px; padding: 6px 10px; cursor: pointer;
}
.fileLabel input { display:none; }


button {
  border: none;
  padding: 8px 14px;
  border-radius: 8px;
  cursor: pointer;
  background: var(--accent);
  color: white;
  font-weight: 600;
}
button:hover { opacity: 0.9; }
.fileLabel {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  padding: 8px 10px;
  border-radius: 10px;
  background: #4252ff;
  color: #fff;
  font-weight: 600;
  cursor: pointer;
  max-width: 140px;     /* limite la largeur */
  overflow: hidden;
  text-overflow: ellipsis;
}
.fileLabel input[type="file"] {
  display: none;
}
/* === SCOPING HARD RESET — UNIQUEMENT DANS LE PLAYER VIDEO.JS === */

/* 1) Reset safe de tout ce qui ressemble à un bouton contrôlé par Video.js */
.video-js .vjs-control-bar .vjs-control.vjs-button,
.video-js .vjs-menu-button .vjs-menu .vjs-menu-item > button,
.video-js .vjs-big-play-button {
  /* annule l'héritage de ton thème global */
  background: transparent !important;
  border: 0 !important;
  box-shadow: none !important;
  margin: 0 !important;
  padding: 0 6px !important;
  color: inherit !important;
  font: inherit !important;
  text-transform: none !important;

  display: inline-flex !important;
  align-items: center !important;
  justify-content: center !important;
  height: 32px !important;
  min-width: 32px !important;
  border-radius: 6px !important;
  line-height: 1 !important;
  overflow: hidden !important;
  cursor: pointer !important;
}

/* 2) Normalisation des pictos Video.js (ils utilisent des pseudo-éléments) */
.video-js .vjs-control .vjs-icon-placeholder:before,
.video-js .vjs-control:before {
  font-family: "VideoJS" !important;
  font-size: 16px !important;
  line-height: 1 !important;
  speak: never;
}

/* 3) Espacement entre les contrôles + barre qui absorbe l'espace */
.video-js .vjs-control-bar{
  display: flex !important;
  gap: 8px !important;
  padding: 6px 10px !important;
}
.video-js .vjs-progress-control{ 
  flex: 1 1 auto !important; 
  min-width: 120px !important;
}
.video-js .vjs-volume-panel.vjs-volume-panel-horizontal{
  width: 72px !important;
  min-width: 60px !important;
}

/* 4) Hover/active sobres, sans polluer ton thème global */
.video-js .vjs-control-bar .vjs-control.vjs-button:hover{
  background: rgba(255,255,255,.06) !important;
}
.video-js .vjs-control-bar .vjs-control.vjs-button:active{
  transform: translateY(0) !important; /* neutralise d'éventuels effets globaux */
}

/* 5) Menu interne (qualité / CC / …) : neutralisation des styles bouton globaux */
.video-js .vjs-menu-button .vjs-menu .vjs-menu-item > button{
  background: transparent !important;
  border: 0 !important;
  width: 100% !important;
  text-align: left !important;
  padding: 8px 10px !important;
  border-radius: 6px !important;
}
.video-js .vjs-menu-button .vjs-menu .vjs-menu-item.vjs-selected > button{
  background: rgba(255,255,255,.08) !important;
}

/* 6) Petits écrans */
@media (max-width: 640px){
  .video-js .vjs-control-bar{ gap: 4px !important; padding: 4px 8px !important; }
  .video-js .vjs-progress-control{ min-width: 80px !important; }
  .video-js .vjs-control-bar .vjs-control.vjs-button{
    height: 30px !important;
    min-width: 30px !important;
    padding: 0 4px !important;
  }
}

/* 7) (Optionnel) Si ton CSS global applique *encore* des styles universels sur button,
      on fait un reset plus radical mais scoppé, compatible navigateurs modernes: */
@supports (all: revert){
  .video-js .vjs-control-bar button,
  .video-js .vjs-menu button,
  .video-js .vjs-big-play-button {
    all: revert !important;            /* remet aux styles UA */
    font-family: inherit !important;   /* puis on remet l’essentiel */
    display: inline-flex !important;
    align-items: center !important;
    justify-content: center !important;
    height: 32px !important;
    min-width: 32px !important;
    padding: 0 6px !important;
    border-radius: 6px !important;
    cursor: pointer !important;
  }
  /* réapplique les icônes Video.js après revert */
  .video-js .vjs-control .vjs-icon-placeholder:before,
  .video-js .vjs-control:before{
    font-family: "VideoJS" !important;
    font-size: 16px !important;
    line-height: 1 !important;
  }
}
